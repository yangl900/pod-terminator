apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook-server
  namespace: pod-terminator
  labels:
    app: webhook-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webhook-server
  template:
    metadata:
      labels:
        app: webhook-server
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1234
      containers:
      - name: server
        image: yangl/pod-termination-webhook:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8443
          name: webhook-api
        volumeMounts:
        - name: webhook-tls-certs
          mountPath: /run/secrets/tls
          readOnly: true
      volumes:
      - name: webhook-tls-certs
        secret:
          secretName: webhook-server-tls
---
apiVersion: v1
kind: Service
metadata:
  name: webhook-server
  namespace: pod-terminator
spec:
  selector:
    app: webhook-server
  ports:
    - port: 443
      targetPort: webhook-api
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: pod-terminator
webhooks:
  - name: webhook-server.pod-terminator.svc
    clientConfig:
      service:
        name: webhook-server
        namespace: pod-terminator
        path: "/validate"
      caBundle: ${CA_PEM_B64}
    rules:
      - operations: [ "DELETE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-terminator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - watch
  - list
  - delete
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: terminate-pods
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pod-terminator
subjects:
- kind: ServiceAccount
  name: default
  namespace: pod-terminator
---
apiVersion: apps/v1
kind: Daemonset
metadata:
  name: health-proxy
  namespace: pod-terminator
  labels:
    app: health-proxy
spec:
  hostNetwork: true
  selector:
    matchLabels:
      app: health-proxy
  template:
    metadata:
      labels:
        app: health-proxy
    spec:
      containers:
      - name: proxy
        image: yangl/healthproxy:latest
        imagePullPolicy: Always